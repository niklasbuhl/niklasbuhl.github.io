"use strict";(self.webpackChunkgatsby_starter_hello_world=self.webpackChunkgatsby_starter_hello_world||[]).push([[1486],{5536:function(e,t,n){n.r(t),n.d(t,{_frontmatter:function(){return l},default:function(){return d}});var i=n(3366),o=(n(7294),n(3497)),a=["components"],l={score:1,featured:!0,tileTextColorScheme:"light",tileImage:"./tile-image-01.png",types:["system","frontend","backend","product"],status:["completed"],title:"ITS Green",subtitle:"Intelligent Traffic System",description:"Intelligent traffic system to streamline commuting for bicyclists through light controlled intersections.",years:["2019"],institutions:["dtu","idemolab"],location:"cph",keywords:{topics:["iot","api","ux"],tools:["python","adobe xd","raspberry pi","phillips hue","particle photon","wiring","c/c++","flask","swift","boostrap"]},people:[{name:"Niklas Buhl",role:"Designer & Developer"},{name:"Sebastian Fohlman",role:"Designer & Developer"},{name:"Mikkel Leth Olsen",role:"Supervisor"}]},r={_frontmatter:l};function d(e){var t=e.components,n=(0,i.Z)(e,a);return(0,o.mdx)("wrapper",Object.assign({},r,n,{components:t,mdxType:"MDXLayout"}),(0,o.mdx)("h2",null,"Description"),(0,o.mdx)("p",null,"A ",(0,o.mdx)("strong",{parentName:"p"},"I"),"ntelligent ",(0,o.mdx)("strong",{parentName:"p"},"T"),"raffic ",(0,o.mdx)("strong",{parentName:"p"},"S"),"ystem allowing users to follow the flow of the green light in intersections along N√∏rrebrogade."),(0,o.mdx)("p",null,"This I my graduation project from B.Eng IT-Electronics. In collaboration with Sebastian TODO we conceptualized, researched, designing, developed and implemented a working prototype of the system."),(0,o.mdx)("p",null,"As my graduation project from IT-Electronics at DTU, I managed to arrange working together with a friend from another education Proces & Innovation so we could make a project which both had ‚Ä¶ in technology and design.\nMy friend had a for a long time had an idea of making some system or product to exploit the light intersections in the city to ease his urban commutes. So we decided to work on with this as our point of entry."),(0,o.mdx)("p",null,"The product is a device which is attached to the bicycle helmet of the rider. Telling when to change the pace in order to arrive at light controlled intersections just in time of green light. The device will either tell the rider to slow down, speed up or stay at current pace."),(0,o.mdx)("p",null,"Our vision of the project is to be implemented in trucks."),(0,o.mdx)("p",null,"The solution can reduce the energy needed to accelerate after being static or slow moving after having to stop at a light controlled intersection. Instead the truck would be able to reduce speed long before the intersection and arrive just in time of green light, and glide through."),(0,o.mdx)("p",null,"Afgangsprojekt i samarbejde med IdemoLab\nI et tv√¶rfaglig projekt med Proces & Innovation har vi designet og udviklet et intelligent cykeltrafik system der kan fort√¶lle hvor hurtigt du skal k√∏re for at n√• det gr√∏nne lys."),(0,o.mdx)("p",null,"ITS Green Graduation project in collaboration with IdemoLab\nI an interdisciplinary project with Process & Innovation we designed and developed an intelligent bicycling traffic system - To tell how fast you should go to catch the green light."),(0,o.mdx)("p",null,"Frontend - Particle Photon (C++) with LED color interface and iOS (swift) app that tracked the bicyclist motion and location.\nBackend - Raspbian and Python Flask for webserver with a REST API. The backend also hosted a website (Python, HTML, CSS, JS) where everything could be monitored"),(0,o.mdx)("p",null,"In my graduation project, my friend and I designed and developed a distributed intelligent traffic bicycle system. He oversaw UX and I did the IT. I developed a backend system based on Raspbian and Python Flask for webserver with a REST API. The backend communicated with an iOS (swift) app that tracked the bicyclist motion and location. A Particle Photon (C++) connected to the internet, where mounted on the bicyclists helmet and used to give instructions about the traffic through a simple LED color interface. The backend also hosted a website (Python, HTML, CSS, JS) where everything could be monitored. The functionality basically were about always being able to tell how fast or slow the bicyclist should go in order to enter every intersection at green light - We think the system could be expanded to vehicles to reduce energy consumption by removing the need to accelerate from a static point."),(0,o.mdx)("p",null,"In my graduation project, my friend and I designed and developed a distributed intelligent traffic bicycle system. He oversaw UX and I did the IT. I developed a backend system based on Raspbian and Python Flask. The backend communicated with an iOS (swift) app that tracked the bicyclist motion and location. A Particle Photon (C++) connected to the internet, where mounted on the bicyclists helmet and used to give instructions about the traffic through a simple LED color interface. The backend also hosted a website (Python, HTML, CSS, JS) where everything could be monitored. The functionality basically was about always being able to tell how fast or slow the bicyclist should go in order to enter every intersection at green light - We think the system could be expanded to vehicles to reduce energy consumption by removing the need to accelerate from a static point."),(0,o.mdx)("p",null,"I an interdisciplinary project with Process & Innovation we designed and developed an intelligent bicycling traffic system - To tell how fast you should go to catch the green light."),(0,o.mdx)("p",null,"ITS Green, graduation project in collaboration with IdemoLab\nI an interdisciplinary project with Process & Innovation we designed and devel- oped an intelligent bicycling traffic system - To tell how fast you should go to catch the green light."),(0,o.mdx)("p",null,"Afgangsprojekt i samarbejde med IdemoLab\nI et tv√¶rfaglig projekt med Proces & Innovation har vi designet og udviklet et intelligent cykeltrafik system der kan fort√¶lle hvor hurtigt du skal k√∏re for at n√• det gr√∏nne lys."),(0,o.mdx)("p",null,"ITS Green Graduation project in collaboration with IdemoLab\nI an interdisciplinary project with Process & Innovation we designed and developed an intelligent bicycling traffic system - To tell how fast you should go to catch the green light."),(0,o.mdx)("p",null,"Frontend - Particle Photon (C++) with LED color interface and iOS (swift) app that tracked the bicyclist motion and location.\nBackend - Raspbian and Python Flask for webserver with a REST API. The backend also hosted a website (Python, HTML, CSS, JS) where everything could be monitored"),(0,o.mdx)("p",null,"In my graduation project, my friend and I designed and developed a distributed intelligent traffic bicycle system. He oversaw UX and I did the IT. I developed a backend system based on Raspbian and Python Flask for webserver with a REST API. The backend communicated with an iOS (swift) app that tracked the bicyclist motion and location. A Particle Photon (C++) connected to the internet, where mounted on the bicyclists helmet and used to give instructions about the traffic through a simple LED color interface. The backend also hosted a website (Python, HTML, CSS, JS) where everything could be monitored. The functionality basically were about always being able to tell how fast or slow the bicyclist should go in order to enter every intersection at green light - We think the system could be expanded to vehicles to reduce energy consumption by removing the need to accelerate from a static point."),(0,o.mdx)("p",null,"Graduation Project üö•\nIn my graduation project, my friend and I designed and developed a distributed intelligent traffic bicycle system. He oversaw UX and I did the IT. I developed a backend system based on Raspbian and Python Flask. The backend communicated with an iOS (swift) app that tracked the bicyclist motion and location. A Particle Photon (C++) connected to the internet, where mounted on the bicyclists helmet and used to give instructions about the traffic through a simple LED color interface. The backend also hosted a website (Python, HTML, CSS, JS) where everything could be monitored. The functionality basically was about always being able to tell how fast or slow the bicyclist should go in order to enter every intersection at green light - We think the system could be expanded to vehicles to reduce energy consumption by removing the need to accelerate from a static point."),(0,o.mdx)("p",null,"An intelligent traffic system for commuting bicyclists, consisting of a distributed and connected system. A backend with a virtual twin of the intersections, a front-end with real- time information about the cyclist and route, an iOS application to utilise the sensors on the phone, and an embedded device with an ambient display to give the cyclist driving instructions."),(0,o.mdx)("p",null,"I an interdisciplinary project with Process & Innovation we designed and developed an intelligent bicycling traffic system - To tell how fast you should go to catch the green light. Based on a distributed system of ios, embedded, linux and web."),(0,o.mdx)("h2",null,"Systems"),(0,o.mdx)("h3",null,"iPhone Application"),(0,o.mdx)("p",null,"iOS app to send mobile sensor informations to backend"),(0,o.mdx)("h3",null,"Main Application Backend"),(0,o.mdx)("p",null,"Python backend and frontend on raspberry pi"),(0,o.mdx)("h3",null,"Web Monitor Application"),(0,o.mdx)("p",null,"The system consists of a backend with a digital twin of the city matching in the light intersection rotations on the specific time and day."),(0,o.mdx)("h3",null,"Ambient Display"),(0,o.mdx)("p",null,"Device based on Particle and LEDs programmed in wiring and C/C++\nEmbedded Device with."),(0,o.mdx)("p",null,"A iPhone application to collect data from the sensors and push to the backend, in order to calculate instructions through."),(0,o.mdx)("h2",null,"Activities"),(0,o.mdx)("ul",null,(0,o.mdx)("li",{parentName:"ul"},"During the project we did all the design practices from the studies.")),(0,o.mdx)("h2",null,"Media"),(0,o.mdx)("ul",null,(0,o.mdx)("li",{parentName:"ul"},"Report"),(0,o.mdx)("li",{parentName:"ul"},"Github Repositories"),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("a",{parentName:"li",href:"https://vimeo.com/613893189"},"Video")),(0,o.mdx)("li",{parentName:"ul"},"Presentation"),(0,o.mdx)("li",{parentName:"ul"},"Prototyping"),(0,o.mdx)("li",{parentName:"ul"},"Project management"),(0,o.mdx)("li",{parentName:"ul"},"Problem solving"),(0,o.mdx)("li",{parentName:"ul"},"Research"),(0,o.mdx)("li",{parentName:"ul"},"Interaction design"),(0,o.mdx)("li",{parentName:"ul"},"Interface design"),(0,o.mdx)("li",{parentName:"ul"},"Product design"),(0,o.mdx)("li",{parentName:"ul"},"C/C++ programming for Particle"),(0,o.mdx)("li",{parentName:"ul"},"Python for Raspberry Pi"),(0,o.mdx)("li",{parentName:"ul"},"REST API"),(0,o.mdx)("li",{parentName:"ul"},"Linux"),(0,o.mdx)("li",{parentName:"ul"},"Web development for Python Flask website"),(0,o.mdx)("li",{parentName:"ul"},"Swift in Xcode for iPhone"),(0,o.mdx)("li",{parentName:"ul"},"Illustration"),(0,o.mdx)("li",{parentName:"ul"},"Mentionable Results"),(0,o.mdx)("li",{parentName:"ul"},"Links / References"),(0,o.mdx)("li",{parentName:"ul"},"PPTX"),(0,o.mdx)("li",{parentName:"ul"},"And for the IT part I did a distributed system with several code languages, all connected and talking together through REST APIs.")))}d.isMDXComponent=!0},3366:function(e,t,n){function i(e,t){if(null==e)return{};var n,i,o={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(o[n]=e[n]);return o}n.d(t,{Z:function(){return i}})}}]);
//# sourceMappingURL=component---src-content-projects-its-green-index-mdx-29f9e360cfe2e45b852a.js.map